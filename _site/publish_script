#!/bin/bash

# Verify we are running from master branch
if [ `git rev-parse --abbrev-ref HEAD` != "master" ]; then
    (>&2 echo "Error: Not on branch 'master'")
    exit 1
fi

if [ ! -z `git status -s` ]; then
    (>&2 echo "Error: Workspace contains changes")
    exit 1
fi

# Fetch the latest REST API 2.0 spec from SheerID production and commit it
curl -s "https://services.sheerid.com/rest/v2/swagger.yaml" > swagger.yaml
git add -A
# Note: commit will not create a new commit if there are no changes
git commit -m "Updating swagger spec"

# Fetch the latest js-lib spec archive, unarchive and transform it, and commit it
./_build-tools/build_jslib-api-docs.sh "https://cdn.jsdelivr.net/npm/@sheerid/jslib@latest/types-reference.zip"

# Push new commits to origin
git push

#build
make build-production

#check out gh-pages branch
git checkout gh-pages

#Remove all but _site/ folder
mv _site /tmp/
rm -rf *
mv /tmp/_site .

#move all content from _site out
mv _site/* .
rm -rf _site

#commit changes  TODO: use arg to set a commit message
git add -A
git commit -m "latest changes to be published"

#push to branch. Use force, no matter if there are missing updates, we just want to push latest to this branch
git push -f origin gh-pages

#return to master branch
git checkout master

#update algolia index
make update-algolia

git fetch
git pull

echo 'All done. check latest changes at http://developer.sheerid.com'
